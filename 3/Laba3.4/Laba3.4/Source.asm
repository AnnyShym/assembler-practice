TITLE Laba3.4

; Дан целочисленный массив А размера N. Переписать в новый целочисленный массив B того же размера 
; вначале все элементы исходного массива с четными номерами, а затем - с нечетными:
; A[2], A[4], A[6], ..., A[1], A[3], A[5]

.686
.model flat, stdcall
.stack 4096

ExitProcess   PROTO :DWORD
MessageBoxA   PROTO :DWORD, :DWORD, :DWORD, :DWORD

.const
	MsgBoxCaption    BYTE   'Массив B:', 0                      ; заголовок MessageBoxa
	 
.data
	A                BYTE	 2, 1, 1, 9, 5, 3, 2, 3, 7, 0, 8      ; исходный целочисленный массив из 11 элементов
	B                BYTE    11 DUP (?)                           ; результирующий массив из 11 элементов
	MsgBoxText       BYTE    '?  ?  ?  ?  ?  ?  ?  ?  ?  ?  ?'    ; шаблон текста MessageBoxа (наш результат)

.code
 
main PROC
	
	mov edx, 0				      ; обнуляем старшую часть делимого
	mov eax, LENGTHOF A           ; загружаем в младшую часть делимого кол-во элементов массива A
	mov ebx, 2                    ; делитель - 2
	div ebx                       ; eax - кол-во четных номеров; edx - остаток

    mov esi, OFFSET A             ;\  устанавливаем указатель на 2 элемент массива (первый четный номер)
	add esi, TYPE A               ;/
	mov edi, OFFSET B             ; загружаем адрес массива B
	mov ecx, eax                  ; устанавливаем счетчик цикла на кол-во четных номеров
	cld                           ; направление - восходящее

	evennumb:                     ; цикл копирования четных номеров
		movsb                     ; копируем элемент под четным номером
		add esi, TYPE A           ; устанавливаем указатель через один элемент массива A (следующий четный номер)
		loop evennumb		      ; повторяем цикл, пока значение ecx не станет равно 0
    
	mov esi, OFFSET A             ; устанавливаем указатель на 1 элемент массива (первый нечетный номер)
	mov ecx, eax                  ;\  устанавливаем счетчик цикла на оставшиеся номера
	add ecx, edx                  ;/ 
	cld                           ; направление - восходящее

	oddnumb:                      ; цикл копирования нечетных номеров
		movsb                     ; копируем элемент под нечетным номером
	    add esi, TYPE A           ; устанавливаем указатель через один элемент массива A (следующий четный номер)
		loop oddnumb	          ; повторяем цикл, пока значение ecx не станет равно 0			

	mov edi, OFFSET MsgBoxText    ; устанавливаем указатель на текст MessageBoxa
	mov esi, OFFSET B             ; загружаем адрес массива B
	mov ecx, LENGTHOF B           ; устанавливаем счетчик цикла на кол-во элементов массива B
	cld                           ; направление - восходящее
	
	mov ah, 30h                   ; для преобразования цифры в символ

	print:                        ; цикл создания строки для вывода на экран
		add [esi], ah             ; преобразовываем цифру в символ
		movsb                     ; копируем этот символ в MsgBoxText 
		add edi, (2 * TYPE B)     ; пропускаем 2 пробела (по шаблону MsgBoxTexta)
		loop print                ; пока не скопируем весь массив B
	
	INVOKE MessageBoxA, 0, OFFSET MsgBoxText, OFFSET MsgBoxCaption, 0     ; выводим результат в MessageBox
	INVOKE ExitProcess, 0                                                 ; завершаем процесс

main ENDP 

END main
